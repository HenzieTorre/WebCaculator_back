<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.RecordMapper">
    <resultMap id="BaseResultMap" type="pojo.Record">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="equation" jdbcType="VARCHAR" property="equation"/>
        <result column="result" jdbcType="VARCHAR" property="result"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , equation, result
    </sql>
    <select id="selectByExample" parameterType="pojo.RecordExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from historic_records
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from historic_records
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from historic_records
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="pojo.RecordExample">
        delete from historic_records
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="pojo.Record">
        insert into historic_records (id, equation, result)
        values (#{id,jdbcType=INTEGER}, #{equation,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="pojo.Record">
        insert into historic_records
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="equation != null">
                equation,
            </if>
            <if test="result != null">
                result,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="equation != null">
                #{equation,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                #{result,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="pojo.RecordExample" resultType="java.lang.Long">
        select count(*) from historic_records
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update historic_records
        <set>
            <if test="row.id != null">
                id = #{row.id,jdbcType=INTEGER},
            </if>
            <if test="row.equation != null">
                equation = #{row.equation,jdbcType=VARCHAR},
            </if>
            <if test="row.result != null">
                result = #{row.result,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update historic_records
        set id = #{row.id,jdbcType=INTEGER},
        equation = #{row.equation,jdbcType=VARCHAR},
        result = #{row.result,jdbcType=VARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="pojo.Record">
        update historic_records
        <set>
            <if test="equation != null">
                equation = #{equation,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="pojo.Record">
        update historic_records
        set equation = #{equation,jdbcType=VARCHAR},
            result   = #{result,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectLast10" resultMap="BaseResultMap">
        SELECT *
        FROM historic_records
        ORDER BY id DESC LIMIT 10;
    </select>

    <delete id="deleteAll">
        DELETE
        FROM historic_records;
    </delete>

    <select id="getLast" resultMap="BaseResultMap">
        SELECT *
        FROM historic_records
        ORDER BY id DESC LIMIT 1;
    </select>
</mapper>